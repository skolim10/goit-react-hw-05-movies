{"version":3,"file":"static/js/424.0e4624f4.chunk.js","mappings":"qMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,oHCHD,EAXiB,WACf,MCD0B,WAC1B,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GAAG,OAAIJ,EAAeI,EAAnB,GAC7B,GAAE,IAEI,CAAEL,YAAAA,EACV,CDPyBM,GAAhBN,EAAR,EAAQA,YAER,OACE,4BACE,4CACA,SAACZ,EAAA,EAAD,CAAYC,OAAQW,MAGzB,C,+LEVDO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,4CAEFC,EAAY,mCAAG,WAAMC,GAAN,uFACHH,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACWE,EADX,2BADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,QAAQrB,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZK,EAAiB,mCAAG,oGACRI,EAAAA,EAAAA,IAAA,6BAAgCC,IADxB,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,QAAQrB,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAP8B,2CAAH,qDAUjBgB,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAApB,OAA8BP,EAA9B,oBADM,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,mBACQT,EADR,2BADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,QAAQrB,KAAI,YAC/B,MAAO,CACL0B,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCxB,GAJ0D,EAATA,GAMpD,KAV4B,2CAAH,sDAafyB,EAAe,mCAAG,WAAMH,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,mBACQT,EADR,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKS,KAAK7B,KAAI,YAC5B,MAAO,CACL8B,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C7B,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","utils/hooks/useTrendList.jsx","utils/Api/Api.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useTrendList } from 'utils/hooks/useTrendList';\n\nconst HomePage = () => {\n  const { trendMovies } = useTrendList();\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      <MoviesList movies={trendMovies} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { getMoviesTrending } from '../../utils/Api/Api';\nimport { useState, useEffect } from 'react';\n\nexport const useTrendList = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n\n  useEffect(() => {\n    getMoviesTrending().then(ret => setTrendMovies(ret));\n  }, []);\n\n  return { trendMovies };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '?api_key=4edac8017d480c85e06f8c50eacccad9';\n\nexport const moviesSearch = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${apiKey}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMoviesTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${apiKey}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}${apiKey}&language=en-US`);\n  return response.data;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${apiKey}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${apiKey}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","trendMovies","setTrendMovies","useEffect","getMoviesTrending","then","ret","useTrendList","axios","apiKey","moviesSearch","inputValue","response","data","results","getMovieDetails","movieId","getMovieReviews","moviesId","author","content","getMovieCredits","cast","name","character","profile_path"],"sourceRoot":""}