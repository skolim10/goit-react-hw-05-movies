{"version":3,"file":"static/js/423.f12bd390.chunk.js","mappings":"qMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,6HCZYI,EAAY,WACvB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWL,EAAaM,IAAI,SAC9BD,IACFE,EAAAA,EAAAA,IAAaF,GAAUG,MAAK,SAAAC,GAAG,OAAIN,EAAUM,EAAd,GAElC,GAAE,CAACT,KAGF,4BACE,kBACEU,SAhBe,SAAAC,GACnBV,EAAgB,CAAEW,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBAEH,EAaKC,MAAO,CACLC,UAAW,QAHf,WAME,kBAAOC,KAAK,UACZ,mBAAQA,KAAK,SAAb,wBAEF,SAAC/B,EAAA,EAAD,CAAYC,OAAQA,MAGzB,ECnCD,GAAgB,WAAa,gCCU7B,EARmB,WACjB,OACE,gBAAK+B,UAAWC,EAAAA,WAAhB,UACE,SAACtB,EAAD,KAGL,C,+LCPDuB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,4CAEFf,EAAY,mCAAG,WAAMgB,GAAN,uFACHF,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACWC,EADX,2BADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,QAAQnC,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZ8B,EAAiB,mCAAG,oGACRN,EAAAA,EAAAA,IAAA,6BAAgCC,IADxB,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,QAAQnC,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAP8B,2CAAH,qDAUjB+B,EAAe,mCAAG,WAAMC,GAAN,uFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAApB,OAA8BP,EAA9B,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,mBACQT,EADR,2BADM,cACvBE,EADuB,yBAItBA,EAASC,KAAKC,QAAQnC,KAAI,YAC/B,MAAO,CACLyC,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCvC,GAJ0D,EAATA,GAMpD,KAV4B,2CAAH,sDAafwC,EAAe,mCAAG,WAAMH,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBACXU,EADW,mBACQT,EADR,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKU,KAAK5C,KAAI,YAC5B,MAAO,CACL6C,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C5C,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","utils/Api/Api.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { moviesSearch } from '../../utils/Api/Api';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const Searchbar = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movTitle = searchParams.get('query');\n    if (movTitle) {\n      moviesSearch(movTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          marginTop: '20px',\n        }}\n      >\n        <input type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchFrom\":\"MoviesPage_searchFrom__3a0mG\"};","import { Searchbar } from 'components/Searchbar/Searchbar';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  return (\n    <div className={css.searchForm}>\n      <Searchbar />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '?api_key=4edac8017d480c85e06f8c50eacccad9';\n\nexport const moviesSearch = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${apiKey}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMoviesTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${apiKey}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}${apiKey}&language=en-US`);\n  return response.data;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${apiKey}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${apiKey}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Searchbar","useSearchParams","searchParams","setSearchParams","useState","setMovies","useEffect","movTitle","get","moviesSearch","then","ret","onSubmit","e","query","target","value","preventDefault","style","marginTop","type","className","css","axios","apiKey","inputValue","response","data","results","getMoviesTrending","getMovieDetails","movieId","getMovieReviews","moviesId","author","content","getMovieCredits","cast","name","character","profile_path"],"sourceRoot":""}