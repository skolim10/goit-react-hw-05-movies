{"version":3,"file":"static/js/479.1f81aa11.chunk.js","mappings":"oOACA,GAAgB,cAAgB,uCAAuC,aAAe,sCAAsC,SAAW,kCAAkC,aAAe,sCAAsC,KAAO,+B,SC8DrO,EA3DyB,WAAO,IAAD,MAE7B,ECH6B,SAAAA,GAC7B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAAS,OAAIJ,EAAgBI,EAApB,GACxC,GAAE,CAACP,IAEG,CAAEE,aAAAA,EACV,CDL0BM,EADLC,EAAAA,EAAAA,MAAZT,SACAE,EAAR,EAAQA,aAGFQ,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,iBAAKC,UAAWC,EAAAA,cAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,UAAC,KAAD,CAAMD,UAAWC,EAAAA,KAAUC,GAAIN,EAA/B,UACG,KACD,mBAAQO,KAAK,SAAb,yBAEF,gBACEC,IAAG,0CAAqChB,EAAaiB,aACrDC,IAAKlB,EAAamB,eAClBP,UAAWC,EAAAA,eAGf,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,gBAAID,UAAWC,EAAAA,WAAf,UACGb,EAAaoB,MADhB,KACyB,IACtBpB,EAAaqB,aACVrB,EAAaqB,aAAaC,UAAU,EAAG,GACvC,GAAI,IAJV,QAOA,eAAGV,UAAWC,EAAAA,WAAd,wBACc,IACXb,EAAauB,aACVC,KAAKC,OAAmC,GAA5BzB,EAAauB,cAAmBG,QAAQ,GACpD,GAJN,QAOA,eAAId,UAAWC,EAAAA,aAAf,uBACA,cAAGD,UAAWC,EAAAA,WAAd,SAA+Bb,EAAa2B,YAC5C,eAAIf,UAAWC,EAAAA,aAAf,qBACA,eAAID,UAAWC,EAAAA,WAAf,mBACGb,EAAa4B,cADhB,aACG,EAAqBC,KAAI,SAAAC,GAAK,OAC7B,wBAAoBA,EAAMC,MAAjBD,EAAME,GADc,OAIjC,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMlB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,SAIP,C,+LE3DDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,4CAEFC,EAAY,mCAAG,WAAMC,GAAN,uFACHH,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACWE,EADX,2BADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,QAAQV,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCZ,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZoB,EAAiB,mCAAG,oGACRP,EAAAA,EAAAA,IAAA,6BAAgCC,IADxB,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,QAAQV,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCZ,MAHgD,EAAZA,MAKvC,KAP8B,2CAAH,qDAUjBjB,EAAe,mCAAG,WAAML,GAAN,uFACNmC,EAAAA,EAAAA,IAAA,iBAAoBnC,GAApB,OAA8BoC,EAA9B,oBADM,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBACXS,EADW,mBACQR,EADR,2BADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,QAAQV,KAAI,YAC/B,MAAO,CACLc,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCZ,GAJ0D,EAATA,GAMpD,KAV4B,2CAAH,sDAafa,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBACXS,EADW,mBACQR,EADR,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKQ,KAAKjB,KAAI,YAC5B,MAAO,CACLE,KAFqE,EAAxCA,KAG7BgB,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9ChB,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailPage.module.css?3a19","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/hooks/useMovieDetails.jsx","utils/Api/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieOverview\":\"MovieDetailPage_movieOverview__xD7Ud\",\"overviewLeft\":\"MovieDetailPage_overviewLeft__nsvV6\",\"movieImg\":\"MovieDetailPage_movieImg__24sWM\",\"movieDetails\":\"MovieDetailPage_movieDetails__0A-TK\",\"link\":\"MovieDetailPage_link__g83lj\"};","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useMovieDetails } from 'utils/hooks/useMovieDetails';\nimport css from './MovieDetailPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails } = useMovieDetails(movieId);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div className={css.movieOverview}>\n      <div className={css.overviewLeft}>\n        <Link className={css.link} to={backLinkHref}>\n          {' '}\n          <button type=\"button\">Go back</button>\n        </Link>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n          alt={movieDetails.original_title}\n          className={css.movieImg}\n        />\n      </div>\n      <div className={css.movieDetails}>\n        <h2 className={css.movieTitle}>\n          {movieDetails.title} ({' '}\n          {movieDetails.release_date\n            ? movieDetails.release_date.substring(0, 4)\n            : ''}{' '}\n          )\n        </h2>\n        <p className={css.movieScore}>\n          User Score:{' '}\n          {movieDetails.vote_average\n            ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n            : ''}\n          %\n        </p>\n        <h3 className={css.reviewHeader}>Overview</h3>\n        <p className={css.reviewText}>{movieDetails.overview}</p>\n        <h3 className={css.genresHeader}>Genres</h3>\n        <ul className={css.genresList}>\n          {movieDetails.genres?.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n        <p>Additional information</p>\n\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { getMovieDetails } from '../Api/Api';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(movieData => setMovieDetails(movieData));\n  }, [movieId]);\n\n  return { movieDetails };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '?api_key=4edac8017d480c85e06f8c50eacccad9';\n\nexport const moviesSearch = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${apiKey}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMoviesTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${apiKey}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}${apiKey}&language=en-US`);\n  return response.data;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${apiKey}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${apiKey}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n"],"names":["movieId","useState","movieDetails","setMovieDetails","useEffect","getMovieDetails","then","movieData","useMovieDetails","useParams","backLinkHref","useLocation","state","from","className","css","to","type","src","poster_path","alt","original_title","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","id","axios","apiKey","moviesSearch","inputValue","response","data","results","getMoviesTrending","getMovieReviews","moviesId","author","content","getMovieCredits","cast","character","profile_path"],"sourceRoot":""}